[{"C:\\Users\\baps\\Desktop\\idtree\\src\\router\\Public.jsx":"1","C:\\Users\\baps\\Desktop\\idtree\\src\\router\\Private.jsx":"2","C:\\Users\\baps\\Desktop\\idtree\\src\\reportWebVitals.js":"3","C:\\Users\\baps\\Desktop\\idtree\\src\\index.js":"4","C:\\Users\\baps\\Desktop\\idtree\\src\\Home\\Home.jsx":"5","C:\\Users\\baps\\Desktop\\idtree\\src\\Main.js":"6","C:\\Users\\baps\\Desktop\\idtree\\src\\Auth\\login.jsx":"7","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\Admin.jsx":"8","C:\\Users\\baps\\Desktop\\idtree\\src\\utils\\tableData.js":"9","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\sideNavbar.jsx":"10","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\Header.jsx":"11","C:\\Users\\baps\\Desktop\\idtree\\src\\Auth\\signup.jsx":"12","C:\\Users\\baps\\Desktop\\idtree\\src\\Home\\homeHeader.jsx":"13","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\Insight.jsx":"14","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\User.jsx":"15","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\AdminUser.jsx":"16","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\BlockList.jsx":"17","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\Loader.jsx":"18","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\PageLoader.jsx":"19"},{"size":834,"mtime":1610141401227,"results":"20","hashOfConfig":"21"},{"size":1077,"mtime":1610178818869,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1607423084313,"results":"23","hashOfConfig":"21"},{"size":1093,"mtime":1610134275311,"results":"24","hashOfConfig":"21"},{"size":2289,"mtime":1610216868954,"results":"25","hashOfConfig":"21"},{"size":2057,"mtime":1610218278444,"results":"26","hashOfConfig":"21"},{"size":3789,"mtime":1610215824506,"results":"27","hashOfConfig":"21"},{"size":14966,"mtime":1610213304997,"results":"28","hashOfConfig":"21"},{"size":2474,"mtime":1610048837104,"results":"29","hashOfConfig":"21"},{"size":7289,"mtime":1610267885021,"results":"30","hashOfConfig":"21"},{"size":3448,"mtime":1610204213165,"results":"31","hashOfConfig":"21"},{"size":3314,"mtime":1610203353300,"results":"32","hashOfConfig":"21"},{"size":2648,"mtime":1610267773377,"results":"33","hashOfConfig":"21"},{"size":3000,"mtime":1610216013524,"results":"34","hashOfConfig":"21"},{"size":3710,"mtime":1610217097017,"results":"35","hashOfConfig":"21"},{"size":16638,"mtime":1610218697475,"results":"36","hashOfConfig":"21"},{"size":14934,"mtime":1610215947114,"results":"37","hashOfConfig":"21"},{"size":207,"mtime":1610191942546,"results":"38","hashOfConfig":"21"},{"size":119,"mtime":1610217872490,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1nes0p0",{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\Users\\baps\\Desktop\\idtree\\src\\router\\Public.jsx",["92","93"],"/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n  const userData = JSON.parse(localStorage.getItem('key'));\n  const isAdmin = JSON.parse(localStorage.getItem('isAdmin'));\n\n  let token;\n  if (userData == null || userData == '' || userData == undefined) {\n    token = null;\n  } else {\n    token = userData;\n  }\n\n  const isLogin = () => {\n    if (token != null && isAdmin) {\n      return true;\n    }\n    return false;\n  };\n\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => (\n        isLogin() && restricted\n          ? <Redirect to=\"/\" />\n          : <Component {...props} />\n      )}\n    />\n  );\n};\n\nexport default PublicRoute;\n",["94","95"],"C:\\Users\\baps\\Desktop\\idtree\\src\\router\\Private.jsx",["96","97","98"],"/* eslint-disable import/no-unresolved */\n/* eslint-disable no-undef */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable quotes */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const userData = JSON.parse(localStorage.getItem('key'));\n  const isAdmin = JSON.parse(localStorage.getItem('isAdmin'));\n\n  let token;\n  if (userData == null || userData == '' || userData == undefined) {\n    token = null;\n  } else {\n    token = userData;\n  }\n\n  const isLogin = () => {\n    if (token != null || isAdmin) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","C:\\Users\\baps\\Desktop\\idtree\\src\\reportWebVitals.js",[],"C:\\Users\\baps\\Desktop\\idtree\\src\\index.js",[],"C:\\Users\\baps\\Desktop\\idtree\\src\\Home\\Home.jsx",[],"C:\\Users\\baps\\Desktop\\idtree\\src\\Main.js",["99","100"],"import React, { Component } from \"react\";\nimport PrivateRoute from \"./router/Private.jsx\";\nimport PublicRoute from \"./router/Public.jsx\";\nimport { withRouter, Redirect } from \"react-router\";\nimport loadable from \"@loadable/component\";\nimport { Switch } from \"react-router-dom\";\nimport PageLoader from './Dashboard/PageLoader.jsx';\n\nimport \"./assets/css/font-awesome.min.css\";\nimport \"./assets/css/bootstrap.min.css\";\nimport \"./assets/css/style.css\";\nimport \"./assets/css/responsive.css\";\nimport './assets/css/datatables.min.css';\nimport './assets/font-awesome/css/font-awesome.css';\n\n\n\nconst Home = loadable(() => import(\"./Home/Home.jsx\"), {\n  fallback: <PageLoader/>,\n});\nconst Login = loadable(() => import(\"./Auth/login.jsx\"), {\n  fallback:  <PageLoader/>,\n});\nconst Admin = loadable(() => import(\"./Dashboard/Admin.jsx\"), {\n  fallback:  <PageLoader/>,\n});\nconst User = loadable(() => import(\"./Dashboard/User.jsx\"), {\n  fallback:  <PageLoader/>,\n});\nconst Signup = loadable(() => import(\"./Auth/signup.jsx\"), {\n  fallback:  <PageLoader/>,\n});\nconst Insight = loadable(() => import(\"./Dashboard/Insight.jsx\"), {\n  fallback:  <PageLoader/>,\n});\nconst AdminUser = loadable(() => import(\"./Dashboard/AdminUser.jsx\"), {\n  fallback:  <PageLoader/>,\n});\nconst BlockList = loadable(() => import(\"./Dashboard/BlockList.jsx\"), {\n  fallback:  <PageLoader/>,\n});\n\nclass Main extends Component {\n  render() {\n    const route = (\n      <Switch>\n        <PublicRoute  component={Home} path=\"/\" exact />\n        <PublicRoute restricted component={Login} path=\"/login\" exact />\n        <PrivateRoute  component={Admin} path=\"/admin\" exact />\n        <PrivateRoute  component={User} path=\"/User\" exact />\n        <PrivateRoute  component={Insight} path=\"/insight\" exact />\n        <PublicRoute restricted component={Signup} path=\"/signup\" exact />\n        <PrivateRoute  component={AdminUser} path=\"/admin-user\" exact />\n        <PrivateRoute  component={BlockList} path=\"/blocklist\" exact />\n\n      </Switch>\n    );\n    return <>{route}</>;\n  }\n}\n\nexport default Main;\n","C:\\Users\\baps\\Desktop\\idtree\\src\\Auth\\login.jsx",["101","102","103"],"import React, { Component, useState,useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Nav from \"../Home/homeHeader.jsx\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(false);\n  useEffect(() => {\n    const isAdmin = JSON.parse(localStorage.getItem('isAdmin'))\n    console.log(isAdmin)\n    if(isAdmin && isAdmin != null){\n        props.history.push('/admin')\n    }else if ( isAdmin != null){\n        props.history.push('/user')\n    }\n   },[isLogin])\n  const login = async () => {\n    axios\n      .post(\"http://3.23.128.15:3000/api/v1/users/login\", {\n        email: email,\n        password: password,\n      })\n      .then((data) => {\n          if(data.data.data.apiKey != undefined){\n            localStorage.setItem('key',JSON.stringify(data.data.data.apiKey))\n          }else{\n           localStorage.setItem('key',JSON.stringify(''))\n          }\n        localStorage.setItem('isAdmin',JSON.stringify(data.data.data.isAdmin))\n        toast.success(\"Login success\");\n        setIsLogin(true)\n      })\n      .catch((error) => toast.error(error));\n  };\n\n  return (\n    <>\n      <Nav button=\"Signup\" />\n      <div id=\"signinpages\">\n        <section>\n          {/* <NotifyModal /> */}\n          <div className=\"boxpop text-center\">\n            <h3 style={{ color: \"#433520\" }}>Please Login</h3>\n            <form onSubmit={(e) => e.preventDefault()}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"Email\"\n                  required\n                />\n              </div>\n              <div className=\"error\">\n                {/* {this.state.error == 'user' ? this.state.message : ''} */}\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  placeholder=\"Password\"\n                />\n              </div>\n              <div className=\"error\">\n                {/* {this.state.error == 'password' ? this.state.message : ''} */}\n              </div>\n              {/* <div>\n                <div className=\"auth-error\">\n                  {this.props.autherrormessage\n                    ? this.props.autherrormessage\n                    : \"\"}\n                </div>\n              </div> */}\n              {/* <div style={{ marginBottom: \"2px\", textAlign: \"left\" }}>\n                <Link className=\"frgtlink\">Forgot your password?</Link>\n              </div> */}\n              <div className=\"form-group\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-md btn-block\"\n                    // onClick={() => props.history.push('/admin')}\n                    onClick={() => login()}\n                  style={{ backgroundColor: \"#00917c\" }}\n                >\n                  Sign In\n                </button>\n              </div>\n              <div className=\"ordiv\">\n                <div className=\"or\">\n                  <span>OR</span>\n                </div>\n              </div>\n              <p className=\"text-center mb-0\">\n                New User ?{\" \"}\n                <Link to=\"/signup\" className=\"col-primary \">\n                  Sign Up\n                </Link>\n              </p>\n            </form>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\nexport default Login;\n","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\Admin.jsx",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120"],"import React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Link } from \"react-router-dom\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory, {\n  PaginationProvider,\n  SizePerPageDropdownStandalone,\n  PaginationListStandalone,\n  PaginationTotalStandalone,\n} from \"react-bootstrap-table2-paginator\";\n// import { connect } from \"react-redux\";\n// import 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport Header from \"./Header.jsx\";\nimport SideNavbar from \"./sideNavbar.jsx\";\n\nimport {\n  tableOptions,\n  defaultSorted,\n  getDate,\n  customSort,\n} from \"../utils/tableData\";\n\n// import '../assets/css/bootstrap.min.css';\n// import '../assets/css/style.css';\n// import '../assets/css/media-admin.css';\n// import '../assets/css/mystyle.css';\n// import '../assets/css/admin.css';\n// import '../assets/font-awesome/css/font-awesome.css';\n// import '../assets/font-awesome/css/fontawesome.css';\n// import '../assets/css/datatables.min.css';\n\nexport default class Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      quizList: [],\n      totalCount: 0,\n      pageSize: this.props.match.params.page\n        ? Number(this.props.match.params.page)\n        : 10,\n      showModal: false,\n      quizId: \"\",\n      isQuizLoading: false,\n      reasonText: \"\",\n      fetchingNext: false,\n      totalQuiz: 0,\n      showInfoModal: false,\n      infoMessage: \"\",\n      isFullLoading: false,\n      filterText: \"\",\n      quizListOld: [],\n      masterQuiz: \"\",\n      cell: false,\n      value: \"\",\n      urlData: \"\",\n      miniBar: true,\n      screenwidth: \"\",\n      user_list: \"\",\n      tableload: false,\n      lastPage: 1,\n      user: [\n        {\n          id: \"1\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"2\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"3\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"4\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"5\",\n          name: \"John wick\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"6\",\n          name: \"John wick\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n      ],\n    };\n    // this.props.getUserList({skip:0,limit:100,search:''})\n  }\n\n  minBar = () => {\n    this.setState({ miniBar: !this.state.miniBar });\n  };\n  getAllUser = async () => {\n    axios\n      .get(\"http://3.23.128.15:3000/api/v1/users/getAllUser\")\n      .then((data) => {\n        this.setState({ user_list: data.data.data });\n      })\n      .catch((error) => toast.error(error));\n  };\n  componentDidMount() {\n    this.getAllUser();\n    // window.addEventListener(\"resize\", function (event) {\n    //   const x = document.documentElement.clientWidth;\n    //   this.updateWidth(x);\n    // });\n    // this.setState({ cell: true });\n  }\n\n  //   updateWidth = (x) => {\n  //     this.setState({\n  //       screenwidth: x,\n  //     });\n  //   };\n\n  // searchResult = () => {\n  //   const { filterText, quizList, quizListOld } = this.state;\n  //   const { fetchQuizListDetails } = this.props;\n\n  //   if (quizListOld.length === 0) {\n  //     this.setState({ quizListOld: quizList });\n  //   }\n  //   this.setState({ isLoading: true });\n\n  //   fetchQuizListDetails(0, 100, filterText);\n  // };\n\n  // getCategoryNames = (items) => {\n  //   let categoryNames = \"\";\n\n  //   if (items.length > 1) {\n  //     items.forEach((item, index) => {\n  //       if (item !== \",\") {\n  //         if (index === items.length - 1) {\n  //           categoryNames += `${item} `;\n  //         } else {\n  //           categoryNames += `${item}, `;\n  //         }\n  //       }\n  //     });\n  //     categoryNames = categoryNames.substring(0, categoryNames.length - 1);\n  //     return categoryNames;\n  //   } else {\n  //     return items[0] !== \",\" ? items[0] : \"\";\n  //   }\n  // };\n  componentDidUpdate(prevProps) {\n    // let list\n    // if (prevProps.userList != this.props.userList) {\n    //   console.log(this.props.userList.data.data[0].list)\n    //   list = this.getList(this.props.userList.data.data[0].list)\n    //   console.log('lissst',list)\n    //   this.setState({user_list: list})\n    // }\n  }\n\n  getList = (data) => {\n    const { quizList, fetchingNext } = this.state;\n    let newList = quizList;\n    const list = [];\n    let masterQuiz = \"\";\n\n    if (data) {\n      data.forEach((listItem) => {\n        const detail = {\n          id: listItem._id,\n          firstName: listItem.firstName,\n          email: listItem.email,\n          phone: listItem.phone,\n        };\n        list.push(detail);\n      });\n      return list;\n    }\n  };\n\n  rowStyleFormat = (row, rowIdx) => {\n    return {\n      outline: \"none\",\n    };\n  };\n  userAccess = (email) => {\n    axios\n      .post(\"http://3.23.128.15:3000/api/v1/users/manageUserAccess\", { email })\n      .then((data) => {\n        toast.success(\"User Access Updated\");\n        this.getAllUser();\n      })\n      .catch((error) => toast.error(error));\n  };\n  rankFormater = (cell, row, rowIndex, formatExtraData) => {\n    return (\n      <div class=\"action-btn\" style={{ cursor: \"pointer\" }}>\n        {row.isBlacklisted ? (\n          <span onClick={() => this.userAccess(row.email)}>Unblacklist</span>\n        ) : (\n          <span onClick={() => this.userAccess(row.email)}>Blacklist</span>\n        )}\n        {/* <!--   <a href=\"#\" data-toggle=\"modal\" data-target=\"#modal-delete\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></a> --> */}\n      </div>\n    );\n  };\n\n  getUserDetail = (id) => {\n    this.props.getUserDetail({ id });\n    this.props.history.push(`/user-detail/${id}`);\n  };\n  handleSearchText = (e) => {\n    // this.props.getUserList({skip:0,limit:30,search: e.target.value})\n  };\n  render() {\n    console.log(this.state.user);\n    const { SearchBar } = Search;\n\n    // if (this.state.cell == false) {\n    //   this.componentDidMount();\n    // }\n    const columns = [\n      //   {\n      //     dataField: \"firstName\",\n      //     text: \"Full Name\",\n      //     sort: true,\n      //     // formatter: this.redirectComponent,\n      //     headerStyle: (colum, colIndex) => {\n      //       return {\n      //         width: \"25%\",\n      //         textAlign: \"center\",\n      //         outline: \"none\",\n      //       };\n      //     },\n      //   },\n      {\n        dataField: \"email\",\n        text: \"Email Address\",\n        sort: true,\n        editCellStyle: {\n          backgroundColor: \"#000\",\n        },\n        headerStyle: (colum, colIndex) => {\n          return {\n            textAlign: \"center\",\n            outline: \"none\",\n          };\n        },\n      },\n      {\n        dataField: \"apiCalls\",\n        text: \"ApiCount\",\n        sort: true,\n        headerStyle: (colum, colIndex) => {\n          return {\n            width: \"25%\",\n            textAlign: \"center\",\n            outline: \"none\",\n          };\n        },\n      },\n      {\n        dataField: \"isBlacklisted\",\n        text: \"Actions\",\n        formatter: this.rankFormater,\n        headerStyle: (colum, colIndex) => {\n          return {\n            width: \"12%\",\n            textAlign: \"center\",\n            outline: \"none\",\n          };\n        },\n      },\n    ];\n\n    const {\n      quizList,\n      pageSize,\n      showModal,\n      isQuizLoading,\n      reasonText,\n      infoMessage,\n      showInfoModal,\n      isFullLoading,\n      masterQuiz,\n    } = this.state;\n\n    const options = {\n      ...tableOptions,\n      // totalSize: this.state.user.length,\n      sizePerPage: 5,\n      custom: true,\n      // onPageChange: this.onPageChange,\n    };\n    return (\n      <>\n        {this.state.user_list ? (\n          <>\n            <SideNavbar\n            //   miniBar={this.state.miniBar}\n            //   screenwidth={this.state.screenwidth}\n            />\n            <div\n              id=\"page-wrapper\"\n              class=\"dark-bg\"\n              style={{ minHeight: \"625px\" }}\n            >\n              {/* <Header addMiniBar={this.minBar} /> */}\n              <div class=\"wrapper wrapper-content\">\n                <div class=\"\">\n                  <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\"></div>\n                  <div class=\"ibox\">\n                    <div class=\"ibox-content\" id=\"history\">\n                      <div class=\"box-heading\">\n                        <h2>Admin</h2>\n                      </div>\n\n                      <div id=\"owner-detail-btn\">\n                        <div className=\"table dataTables-example\">\n                          {this.state.user_list && (\n                            <ToolkitProvider\n                              keyField=\"id\"\n                              data={this.state.user_list}\n                              columns={columns}\n                              noDataIndication=\"Table is Empty\"\n                              tabIndexCell\n                              search\n                            >\n                              {(props) => (\n                                <>\n                                  <div class=\"search\">\n                                    <div\n                                      id=\"DataTables_Table_0_filter\"\n                                      class=\"dataTables_filter\"\n                                    >\n                                      <label style={{ display: \"inline\" }}>\n                                        Search:\n                                      </label>\n                                      {/* <input\n                                        type=\"search\"\n                                        class=\"form-control input-sm\"\n                                        placeholder=\"\"\n                                        aria-controls=\"DataTables_Table_0\"\n                                        style={{\n                                          width: \"15%\",\n                                          display: \"inline-block\",\n                                          height: \"30px\",s\n                                        }}\n                                        onChange={this.handleSearchText}\n                                        onKeyDown={this.onKeyDown}\n                                      /> */}\n                                      <SearchBar\n                                        class=\"form-control input-sm\"\n                                        style={{\n                                          width: \"25%\",\n                                          display: \"inline-block\",\n                                          height: \"30px\",\n                                        }}\n                                        {...props.searchProps}\n                                      />\n\n                                      {/* <span\n                                        class=\"input-group-append search-btn\"\n                                        style={{\n                                          display: \"inline-block\",\n                                        }}\n                                        onClick={() => this.searchResult()}\n                                      >\n                                        <i\n                                          class=\"feather icon-search input-group-text\"\n                                          style={{\n                                            minHeight: \"36px\",\n                                          }}\n                                        ></i>\n                                      </span> */}\n                                    </div>\n                                  </div>\n\n                                  <div>\n                                    <PaginationProvider\n                                      pagination={paginationFactory(options)}\n                                    >\n                                      {({\n                                        paginationProps,\n                                        paginationTableProps,\n                                      }) => (\n                                        <>\n                                          {\"Show\"}{\" \"}\n                                          <SizePerPageDropdownStandalone\n                                            {...paginationProps}\n                                          />{\" \"}\n                                          {\"entries\"}{\" \"}\n                                          <BootstrapTable\n                                            options={tableOptions}\n                                            noDataIndication={() => (\n                                              <div\n                                                style={{ textAlign: \"center\" }}\n                                              >\n                                                Table is Empty\n                                              </div>\n                                            )}\n                                            striped\n                                            trStyle={this.rowStyleFormat}\n                                            rowStyle={{\n                                              textAlign: \"center\",\n                                              outline: \"none\",\n                                            }}\n                                            {...props.baseProps}\n                                            {...paginationTableProps}\n                                            sort={{\n                                              sortFunc: this.sorting,\n                                              sortCaret: this.sortCaret,\n                                            }}\n                                          />\n                                          <div className=\"paginationbottom\">\n                                            <PaginationTotalStandalone\n                                              {...paginationProps}\n                                            />\n                                            <PaginationListStandalone\n                                              {...paginationProps}\n                                            />\n                                          </div>\n                                        </>\n                                      )}\n                                    </PaginationProvider>\n                                  </div>\n                                </>\n                              )}\n                            </ToolkitProvider>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : null}\n      </>\n    );\n  }\n}\n","C:\\Users\\baps\\Desktop\\idtree\\src\\utils\\tableData.js",[],"C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\sideNavbar.jsx",["121","122","123"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n\n// import '../assets/css/bootstrap.min.css';\n// import '../assets/css/style.css';\n// import '../assets/css/media-admin.css';\n// import '../assets/css/mystyle.css';\n// import '../assets/css/admin.css';\n// import '../assets/font-awesome/css/font-awesome.css';\n// import '../assets/css/datatables.min.css';\n\nclass sideNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: false,\n      active: 1,\n      loanToggle: false,\n      profileToggle: false,\n      documentToggle: false,\n      calToggle: false,\n    };\n  }\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  }\n  logouthandler = () => {\n    localStorage.clear();\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const isAdmin = JSON.parse(localStorage.getItem(\"isAdmin\"));\n    const { collapsed } = this.state;\n    const { active } = this.state;\n    const classOne = collapsed\n      ? \"collapse navbar-collapse\"\n      : \"collapse navbar-collapse show\";\n    const classTwo = collapsed\n      ? \"navbar-toggler navbar-toggler-right collapsed\"\n      : \"navbar-toggler navbar-toggler-right\";\n    const colapse = `${classOne} collapse navbar-collapse`;\n    return (\n      <>\n        {/* <nav\n          class=\"navbar-default navbar-expand-lg  navbar-static-side left-main-menu\"\n          role=\"navigation\"\n        >\n          <div class=\"sidebar-collapse\">\n            <ul class=\"nav metismenu\" id=\"side-menu\">\n              <li\n                class=\"nav-header\"\n                style={{\n                  width:\n                    this.props.miniBar && this.props.screenwidth > 769\n                      ? \"70px\"\n                      : !this.props.miniBar && this.props.screenwidth < 769\n                      ? \"70px\"\n                      : \"221px\",\n                      height: '84px',\n                      display: 'flex',\n                      alignItems:'center',\n                      justifyContent: 'center'\n                }}\n              >\n                <div class=\"dropdown profile-element\">\n                  <div class=\"logo-panel text-center float-n\">\n                    <Link to='/dashboard'>\n                      {\" \"}\n                    </Link>\n                  </div>\n                </div>\n           \n              </li>\n              {isAdmin ?<><li\n                className={\n                  this.props.location.pathname == \"/dashboard\" ? \"active\" : \"\"\n                }\n              >\n                <Link to=\"/admin\">\n                  <i class=\"fa fa-tachometer\" aria-hidden=\"true\"></i>{\" \"}\n                  <span class=\"nav-label\">Dashboard</span>\n                </Link>\n              </li>\n              <li\n                className={\n                  this.props.location.pathname == \"/insight\" ? \"active\" : \"\"\n                }\n              >\n                <Link to=\"/insight\">\n                  <i class=\"fa fa-chart-bar\" aria-hidden=\"true\"></i>{\" \"}\n                  <span class=\"nav-label\">Insight</span>\n                </Link>\n              </li>\n              <li\n                className={\n                  this.props.location.pathname == \"/admin-user\" ? \"active\" : \"\"\n                }\n              >\n                <Link to=\"/admin-user\">\n                  <i class=\"fa fa-chart-bar\" aria-hidden=\"true\"></i>{\" \"}\n                  <span class=\"nav-label\">Admin User</span>\n                </Link>\n              </li>\n              <li\n                className={\n                  this.props.location.pathname == \"/blocklist\" ? \"active\" : \"\"\n                }\n              >\n                <Link to=\"/blocklist\">\n                  <i class=\"fa fa-chart-bar\" aria-hidden=\"true\"></i>{\" \"}\n                  <span class=\"nav-label\">Blocklist User</span>\n                </Link>\n              </li></>:   <li\n                className={\n                  this.props.location.pathname == \"/user\" ? \"active\" : \"\"\n                }\n              >\n                <Link to=\"/user\">\n                  <i class=\"fa fa-chart-bar\" aria-hidden=\"true\"></i>{\" \"}\n                  <span class=\"nav-label\">User</span>\n                </Link>\n              </li>}\n            </ul>\n          </div>\n        </nav> */}\n        <header className=\"nav-wrapper header-white\">\n          <nav className=\"navbar fixed-top sticky\">\n            {/* <a class=\"navbar-brand\">\n          <img src={Image.logo_white} />\n        </a> */}\n            <button\n              onClick={this.toggleNavbar}\n              className={`${classTwo}`}\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-expanded={!this.state.collapsed}\n              // aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\">\n                {this.state.collapsed ? (\n                  <i className=\"fa fa-bars\" />\n                ) : (\n                  <i className=\"fa fa-times\" />\n                )}\n              </span>\n              Menu\n            </button>\n            <div className={`${classOne}`} id=\"navbarSupportedContent\">\n              <ul className=\"navbar-nav\">\n                {isAdmin ? (\n                  <>\n                    <li className={`nav-item`}>\n                      <Link className=\"nav-link\" to=\"/admin\">\n                        Dashboard\n                        <span className=\"sr-only\">(current)</span>\n                      </Link>\n                    </li>\n                    <li className={`nav-item`}>\n                      <Link to=\"/insight\" className=\"nav-link\">\n                        {\" \"}\n                        Insight\n                        <span className=\"sr-only\">(current)</span>\n                      </Link>\n                    </li>\n                    <li className={`nav-item`}>\n                      <Link to=\"/admin-user\" className=\"nav-link\">\n                       Admin Users\n                        <span className=\"sr-only\">(current)</span>\n                      </Link>\n                    </li>\n                    <li className={`nav-item`}>\n                      <Link to=\"/blocklist\" className=\"nav-link\">\n                      Manage Access\n                        <span className=\"sr-only\">(current)</span>\n                      </Link>\n                    </li>\n                  </>\n                ) : (\n                  <li className={`nav-item`}>\n                    <Link to=\"/user\" className=\"nav-link\">\n                      User\n                      <span className=\"sr-only\">(current)</span>\n                    </Link>\n                  </li>\n                )}\n              </ul>\n            </div>\n\n            <ul className=\"signup-link\">\n              <li>\n                <a href='http://3.23.128.15/sdk-docs/' target='_blank'>SDK-DOCS</a>\n              </li>\n              <li>\n                <Link onClick={this.logouthandler}>Logout</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default withRouter(sideNavbar);\n","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\Header.jsx",["124","125","126","127","128","129"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n\n// import '../assets/css/bootstrap.min.css';\n// import '../assets/css/style.css';\n// import '../assets/css/media-admin.css';\n// import '../assets/css/mystyle.css';\n// import '../assets/css/admin.css';\n// import '../assets/font-awesome/css/font-awesome.css';\n// import '../assets/css/datatables.min.css';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      miniBar: true,\n      screenwidth: \"\",\n    };\n  }\n\n  logouthandler = () => {\n    localStorage.clear();\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const profileDataFromProfile = this.props.profileDataFromProfile;\n    const profileData = JSON.parse(localStorage.getItem(\"profileData\"));\n    return (\n      <>\n        <div className=\"row top-menu2\">\n          <nav\n            className=\"navbar navbar-static-top dark-bg-header top-menu\"\n            role=\"navigation\"\n            style={{ marginBottom: \"0\" }}\n          >\n            <div className=\"navbar-header\">\n              <span\n                className=\"navbar-minimalize minimalize-styl-2 btn btn-primary \"\n                onClick={this.props.addMiniBar}\n              >\n                <i className=\"fa fa-bars\" />{\" \"}\n              </span>\n              {/* <!--      <form role=\"search\" class=\"navbar-form-custom\" action=\"search_results.html\">\n                   <div class=\"form-group\">\n                     <input type=\"text\" placeholder=\"Search for something...\" class=\"form-control\" name=\"top-search\" id=\"top-search\">\n                     </div>\n                     </form> --> */}\n            </div>\n            <ul className=\"navbar-top-links navbar-right\">\n              <li className=\"user-info-box welcome tooltipa\">\n                {/* <!--   <p class=\"m-t-sm m-r-sm\">Welcome First Name </p> --> */}\n                <div className=\"dropdown d-flex\">\n                  <span className=\"prof-img\">\n                    <a>\n                      {\" \"}\n                      <img\n                        alt=\"image\"\n                        className=\"img-back\"\n                        // src={user}\n                      />\n                    </a>\n                  </span>\n                  <span\n                    data-toggle=\"dropdown\"\n                    className=\"dropdown-toggle\"\n                    aria-expanded=\"false\"\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    <span className=\"clear\">\n                      {\" \"}\n                      <span className=\"block m-t-xs\" />{\" \"}\n                      <span className=\"text-muted text-xs block\">\n                        {/* {profileDataFromProfile ? profileDataFromProfile.firstName : profileData ? profileData.firstName : ''} */}\n                        {/* <b className=\"caret\" /> */}\n                      </span>{\" \"}\n                    </span>{\" \"}\n                  </span>\n                  <ul className=\"dropdown-menu\">\n                    {/* <!--                            <li><a href=\"contacts.html\">Contacts</a></li>--> */}\n                    <li>\n                      <a onClick={this.logouthandler}>Logout</a>\n                    </li>\n                  </ul>\n                </div>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","C:\\Users\\baps\\Desktop\\idtree\\src\\Auth\\signup.jsx",["130","131","132"],"import React, { Component,useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Nav from \"../Home/homeHeader.jsx\";\nimport axios from 'axios';\nimport { toast  } from 'react-toastify';\n\n// import \"../assets/css/bootstrap.css\";\n// import \"../assets/css/fontsCss.css\";\n// import \"../assets/css/custom.css\";\n// import '../assets/css/mystyle.css';\n\nfunction Signup(props) {\n  const [email,setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n   const signup = async() => {\n      axios.post('http://3.23.128.15:3000/api/v1/users/registerUser',{\n          email: email,\n          password: password\n      })\n      .then(data => {toast.success('signup success');props.history.push('/login')})\n      .catch(error => toast.error(error))\n    }\n    const submit = () => {\n        {toast.success('Signup success');props.history.push('/login')}\n    }\n    return (\n      <>\n        <Nav button=\"Login\" />\n        <div id=\"signinpages\">\n          <section>\n            {/* <NotifyModal /> */}\n            <div className=\"boxpop text-center\">\n              <h3 style={{ color: \"#433520\" }}>Please Signup</h3>\n              <form onSubmit={(e) => e.preventDefault()}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"Email\"\n                    required\n                  />\n                </div>\n                <div className=\"error\">\n                  {/* {this.state.error == 'user' ? this.state.message : ''} */}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Password\"\n                  />\n                </div>\n                <div className=\"error\">\n                  {/* {this.state.error == 'password' ? this.state.message : ''} */}\n                </div>\n                <div>\n                  {/* <div className=\"auth-error\">\n                  {this.props.autherrormessage\n                    ? this.props.autherrormessage\n                    : ''}\n                </div> */}\n                </div>\n\n                <div className=\"form-group\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-md btn-block\"\n                      onClick={signup}\n                    style={{ backgroundColor: \"#00917c\" }}\n                  >\n                    Sign up\n                  </button>\n                </div>\n                <div className=\"ordiv\">\n                  <div className=\"or\">\n                    <span>OR</span>\n                  </div>\n                </div>\n                <p className=\"text-center mb-0\">\n                  Already a Member ?{\" \"}\n                  <Link to=\"/login\" className=\"col-primary \">\n                    Login\n                  </Link>\n                </p>\n              </form>\n            </div>\n          </section>\n        </div>\n      </>\n    );\n  }\n  export default Signup;","C:\\Users\\baps\\Desktop\\idtree\\src\\Home\\homeHeader.jsx",["133"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class homeHeader extends Component {\n  render() {\n    const isLogin = JSON.parse(localStorage.getItem(\"key\"));\n    const isAdmin = JSON.parse(localStorage.getItem(\"isAdmin\"));\n\n    return (\n      <>\n        {/* <nav className=\"navbar before navbar-expand-md py-1\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <h1 style={{ color: \"#433520\" }}>IDTree</h1>\n            <sub style={{ color: \"#433520\" }}>Uniqueid generator on Hyperledger fabric blockchain</sub>\n          </Link>\n          <div>\n          <a\n            className=\"f-m\"\n            style={{padding: '12px' }}\n            target='_blank'\n            href='http://3.23.128.15/sdk-docs/'\n          >\n            SDK-DOCS\n          </a>\n          <Link\n            to={\n              !isLogin\n                ? \"/\" + this.props.button.toLowerCase()\n                : isAdmin\n                ? \"/admin\"\n                : \"/user\"\n            }\n            className=\"btn btn-primary f-m\"\n            style={{ backgroundColor: \"#00917c\",padding: '12px' }}\n          >\n            {!isLogin ? this.props.button : isAdmin ? \"Admin\" : \"User\"}\n          </Link>\n          </div>\n        </nav> */}\n        <header className=\"nav-wrapper header-white\">\n          <nav\n            className=\"navbar fixed-top sticky\"\n          >\n            {/* <a class=\"navbar-brand\">\n          <img src={Image.logo_white} />\n        </a> */}\n <Link className=\"navbar-brand\" to=\"/\">\n            <h1 style={{ color: \"#433520\",marginBottom:'-14px' }}>IDTree</h1>\n            <sub style={{ color: \"#000\", fontSize:'13px',fontWeight:'bold' }}>UniqueID Generator on Hyperledger Fabric Blockchain</sub>\n          </Link>\n            <ul className=\"signup-link\">\n              <li>\n                <a href=\"http://3.23.128.15/sdk-docs/\" target=\"_blank\">\n                  SDK-DOCS\n                </a>\n              </li>\n              {/* <li>\n                <Link to=\"/signup\">Sign up</Link>\n              </li>\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li> */}\n               <Link\n            to={\n              !isLogin\n                ? \"/\" + this.props.button.toLowerCase()\n                : isAdmin\n                ? \"/admin\"\n                : \"/user\"\n            }\n            className=\"btn btn-primary f-m\"\n            style={{ backgroundColor: \"#00917c\",padding: '12px' }}\n          >\n            {!isLogin ? this.props.button : isAdmin ? \"Admin\" : \"User\"}\n          </Link>\n            </ul>\n          </nav>\n        </header>\n      </>\n    );\n  }\n}\n","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\Insight.jsx",["134"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Header from \"./Header.jsx\";\nimport SideNavbar from \"./sideNavbar.jsx\";\nimport { toast } from \"react-toastify\";\n\nexport default class Insight extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            miniBar: true,\n            platformUsers: '',\n            nonPlatformUsers: ''\n        }\n    }\n    insight = async () => {\n        axios\n          .get(\"http://3.23.128.15:3000/api/v1/users/fetchTotalAPICalls\")\n          .then((data) => {\n              this.setState({platformUsers:data.data.data.platformUsers,nonPlatformUsers:data.data.data.nonPlatformUsers})\n          })\n          .catch((error) => toast.error(error));\n      };\n    componentDidMount(){\n      this.insight()\n    }\n    minBar = () => {\n        this.setState({ miniBar: !this.state.miniBar });\n      };\n  render() {\n    let data = {\n      labels: [\"PlatformUsers\", \"NonPlatformUsers\"],\n      datasets: [\n        {\n          label: \"AcceptedCount\",\n          backgroundColor: [\"#FF6600\", \"#FF0F00\"],\n          data: [this.state.platformUsers, this.state.nonPlatformUsers],\n\n        },\n    \n      ],\n   \n    };\n    return (\n      <>\n      \n        <SideNavbar\n    \n        />\n        <div id=\"page-wrapper\" class=\"dark-bg\" style={{ minHeight: \"625px\" }}>\n          <div class=\"wrapper wrapper-content\">\n            <div class=\"\">\n              <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\"></div>\n              <div class=\"ibox\">\n                <div class=\"ibox-content\" id=\"history\">\n                  <div class=\"box-heading\">\n                    <h2>Insight</h2>\n                  </div>\n                  <div>\n                    <div\n                      id=\"donut\"\n                      style={{\n                        height: \"50vh\",\n                        marginTop: \"0px\",\n                        width: \"100%\",\n                      }}\n                    >\n                      <Doughnut\n                        data={data}\n                        width={400}\n                        height={400}\n                        // datasetKeyProvider={this.datasetKeyProvider}\n                        options={{\n                          legend: {\n                            display: true,\n                            position: \"bottom\",\n                            // labels: {\n                            //   boxWidth: 10,\n                            //   boxHeight: 10,\n                            //   usePointStyle: true,\n                            // },\n                          },\n                          responsive: true,\n                          maintainAspectRatio: false,\n                          cornerRadius: 8,\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\User.jsx",["135"],"import React, { Component } from \"react\";\nimport Header from \"./Header.jsx\";\nimport SideNavbar from \"./sideNavbar.jsx\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport Loader from \"./Loader.jsx\";\n\nexport default class user extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      miniBar: true,\n      key: \"\",\n      privateKey: \"\",\n      loader: false,\n      count: '',\n    };\n  }\n  genKey = async () => {\n    const apiKey = JSON.parse(localStorage.getItem(\"key\"));\n    this.setState({ loader: true });\n    axios\n      .post(\"http://3.23.128.15:3000/api/v1/users/generateUniqueIdwithKey\", {\n        apiKey,\n      })\n      .then((data) => {\n        this.setState({\n          key: data.data.data.uniqueID.uniqueID,\n          privateKey: data.data.data.uniqueID.privateKey,\n          count: data.data.data.totalAPICalls,\n          loader: false,\n        });\n      })\n      .catch((error) => toast.error(error));\n  };\n  render() {\n    const apiKey = JSON.parse(localStorage.getItem(\"key\"));\n    console.log(this.state.key);\n    return (\n      <>\n        <SideNavbar />\n        <div id=\"page-wrapper\" class=\"dark-bg\" style={{ minHeight: \"625px\" }}>\n          <div class=\"wrapper wrapper-content\">\n            <div class=\"wrapper wrapper-content\">\n              <div class=\"box-heading\" style={{ marginLeft: \"188px\" }}>\n                <h2>Generate Key</h2>\n              </div>\n              <div className=\"row mt-4\" style={{ marginLeft: \"173px\" }}>\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={apiKey}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-sm-8\">\n                  <div className=\"form-group\">\n                    <div>\n                      <div>\n                        <h5>Uniqueid: {this.state.key}</h5>\n                      </div>\n                      <div\n                        style={{\n                          display: \"flex\",\n                        }}\n                      >\n                        <h5 style={{ width: \"80%\", wordBreak: \"break-word\" }}>\n                          PrivateKey: {this.state.privateKey}\n                        </h5>\n                      </div>\n                      <div\n                        style={{\n                          display: \"flex\",\n                        }}\n                      >\n                        <h5 style={{ width: \"80%\", wordBreak: \"break-word\" }}>\n                          Total Api Count: {this.state.count}\n                        </h5>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary btn-md btn-block W-70\"\n                      onClick={() => this.genKey()}\n                      style={{\n                        backgroundColor: \"#00917c\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                      }}\n                      //   disabled={this.state.key != '' ? false: true}\n                    >\n                      {this.state.loader ? <Loader /> : \"Generate Key\"}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\AdminUser.jsx",["136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"import React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Link } from \"react-router-dom\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory, {\n  PaginationProvider,\n  SizePerPageDropdownStandalone,\n  PaginationListStandalone,\n  PaginationTotalStandalone,\n} from \"react-bootstrap-table2-paginator\";\n// import { connect } from \"react-redux\";\n// import 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport Header from \"./Header.jsx\";\nimport SideNavbar from \"./sideNavbar.jsx\";\n\nimport {\n  tableOptions,\n  defaultSorted,\n  getDate,\n  customSort,\n} from \"../utils/tableData\";\n\n// import '../assets/css/bootstrap.min.css';\n// import '../assets/css/style.css';\n// import '../assets/css/media-admin.css';\n// import '../assets/css/mystyle.css';\n// import '../assets/css/admin.css';\n// import '../assets/font-awesome/css/font-awesome.css';\n// import '../assets/font-awesome/css/fontawesome.css';\n// import '../assets/css/datatables.min.css';\n\nexport default class AdminUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      quizList: [],\n      totalCount: 0,\n      pageSize: this.props.match.params.page\n        ? Number(this.props.match.params.page)\n        : 10,\n      showModal: false,\n      quizId: \"\",\n      isQuizLoading: false,\n      reasonText: \"\",\n      fetchingNext: false,\n      totalQuiz: 0,\n      showInfoModal: false,\n      infoMessage: \"\",\n      isFullLoading: false,\n      filterText: \"\",\n      quizListOld: [],\n      masterQuiz: \"\",\n      cell: false,\n      value: \"\",\n      urlData: \"\",\n      miniBar: true,\n      screenwidth: \"\",\n      user_list: \"\",\n      tableload: false,\n      lastPage: 1,\n      email: \"\",\n      password: \"\",\n      user: [\n        {\n          id: \"1\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"2\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"3\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"4\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"5\",\n          name: \"John wick\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"6\",\n          name: \"John wick\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n      ],\n    };\n    // this.props.getUserList({skip:0,limit:100,search:''})\n  }\n\n  minBar = () => {\n    this.setState({ miniBar: !this.state.miniBar });\n  };\n  getAllUser = async () => {\n    axios\n      .get(\"http://3.23.128.15:3000/api/v1/users/getAllAdminUser\")\n      .then((data) => {\n        this.setState({ user_list: data.data.data });\n      })\n      .catch((error) => toast.error(error));\n  };\n  addAdmin = async () => {\n    axios\n      .post(\"http://3.23.128.15:3000/api/v1/users/addAdminUser\", {\n        email: this.state.email,\n        password: this.state.password,\n      })\n      .then((data) => {\n        toast.success(\"Admin user added\");\n        this.getAllUser();\n      })\n      .catch((error) => toast.error(error));\n  };\n  componentDidMount() {\n    this.getAllUser();\n    // window.addEventListener(\"resize\", function (event) {\n    //   const x = document.documentElement.clientWidth;\n    //   this.updateWidth(x);\n    // });\n    // this.setState({ cell: true });\n  }\n\n  //   updateWidth = (x) => {\n  //     this.setState({\n  //       screenwidth: x,\n  //     });\n  //   };\n\n  // searchResult = () => {\n  //   const { filterText, quizList, quizListOld } = this.state;\n  //   const { fetchQuizListDetails } = this.props;\n\n  //   if (quizListOld.length === 0) {\n  //     this.setState({ quizListOld: quizList });\n  //   }\n  //   this.setState({ isLoading: true });\n\n  //   fetchQuizListDetails(0, 100, filterText);\n  // };\n\n  // getCategoryNames = (items) => {\n  //   let categoryNames = \"\";\n\n  //   if (items.length > 1) {\n  //     items.forEach((item, index) => {\n  //       if (item !== \",\") {\n  //         if (index === items.length - 1) {\n  //           categoryNames += `${item} `;\n  //         } else {\n  //           categoryNames += `${item}, `;\n  //         }\n  //       }\n  //     });\n  //     categoryNames = categoryNames.substring(0, categoryNames.length - 1);\n  //     return categoryNames;\n  //   } else {\n  //     return items[0] !== \",\" ? items[0] : \"\";\n  //   }\n  // };\n  componentDidUpdate(prevProps) {\n    // let list\n    // if (prevProps.userList != this.props.userList) {\n    //   console.log(this.props.userList.data.data[0].list)\n    //   list = this.getList(this.props.userList.data.data[0].list)\n    //   console.log('lissst',list)\n    //   this.setState({user_list: list})\n    // }\n  }\n\n  getList = (data) => {\n    const { quizList, fetchingNext } = this.state;\n    let newList = quizList;\n    const list = [];\n    let masterQuiz = \"\";\n\n    if (data) {\n      data.forEach((listItem) => {\n        const detail = {\n          id: listItem._id,\n          firstName: listItem.firstName,\n          email: listItem.email,\n          phone: listItem.phone,\n        };\n        list.push(detail);\n      });\n      return list;\n    }\n  };\n\n  rowStyleFormat = (row, rowIdx) => {\n    return {\n      outline: \"none\",\n    };\n  };\n  userAccess = (email) => {\n    axios\n      .post(\"http://3.23.128.15:3000/api/v1/users/manageUserAccess\", { email })\n      .then((data) => {\n        toast.success(\"User Access Updated\");\n        this.getAllUser();\n      })\n      .catch((error) => toast.error(error));\n  };\n  rankFormater = (cell, row, rowIndex, formatExtraData) => {\n    return (\n      <div class=\"action-btn\" style={{ cursor: \"pointer\" }}>\n        {row.isBlacklisted ? (\n          <span onClick={() => this.userAccess(row.email)}>Unblacklist</span>\n        ) : (\n          <span onClick={() => this.userAccess(row.email)}>Blacklist</span>\n        )}\n        {/* <!--   <a href=\"#\" data-toggle=\"modal\" data-target=\"#modal-delete\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></a> --> */}\n      </div>\n    );\n  };\n\n  getUserDetail = (id) => {\n    this.props.getUserDetail({ id });\n    this.props.history.push(`/user-detail/${id}`);\n  };\n  handleSearchText = (e) => {\n    // this.props.getUserList({skip:0,limit:30,search: e.target.value})\n  };\n  render() {\n    console.log(this.state.user);\n    // if (this.state.cell == false) {\n    //   this.componentDidMount();\n    // }\n    const { SearchBar } = Search;\n\n    const columns = [\n      //   {\n      //     dataField: \"firstName\",\n      //     text: \"Full Name\",\n      //     sort: true,\n      //     // formatter: this.redirectComponent,\n      //     headerStyle: (colum, colIndex) => {\n      //       return {\n      //         width: \"25%\",\n      //         textAlign: \"center\",\n      //         outline: \"none\",\n      //       };\n      //     },\n      //   },\n      {\n        dataField: \"email\",\n        text: \"Email Address\",\n        sort: true,\n        editCellStyle: {\n          backgroundColor: \"#000\",\n        },\n        headerStyle: (colum, colIndex) => {\n          return {\n            textAlign: \"center\",\n            outline: \"none\",\n          };\n        },\n      },\n      {\n        dataField: \"apiCalls\",\n        text: \"ApiCount\",\n        sort: true,\n        headerStyle: (colum, colIndex) => {\n          return {\n            width: \"25%\",\n            textAlign: \"center\",\n            outline: \"none\",\n          };\n        },\n      },\n      {\n        dataField: \"isBlacklisted\",\n        text: \"Actions\",\n        formatter: this.rankFormater,\n        headerStyle: (colum, colIndex) => {\n          return {\n            width: \"12%\",\n            textAlign: \"center\",\n            outline: \"none\",\n          };\n        },\n      },\n    ];\n\n    const {\n      quizList,\n      pageSize,\n      showModal,\n      isQuizLoading,\n      reasonText,\n      infoMessage,\n      showInfoModal,\n      isFullLoading,\n      masterQuiz,\n    } = this.state;\n\n    const options = {\n      ...tableOptions,\n      // totalSize: this.state.user.length,\n      sizePerPage: 5,\n      custom: true,\n      // onPageChange: this.onPageChange,\n    };\n    return (\n      <>\n        {this.state.user_list ? (\n          <>\n            <SideNavbar\n            //   miniBar={this.state.miniBar}\n            //   screenwidth={this.state.screenwidth}\n            />\n            <div\n              id=\"page-wrapper\"\n              class=\"dark-bg\"\n              style={{ minHeight: \"625px\" }}\n            >\n              <div class=\"wrapper wrapper-content\">\n                <div class=\"box-heading\" style={{ marginLeft: \"188px\" }}>\n                  <h2>Add Admin User</h2>\n                </div>\n                <div className=\"row mt-4\" style={{ marginLeft: \"173px\" }}>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.email}\n                        onChange={(e) =>\n                          this.setState({ email: e.target.value })\n                        }\n                        placeholder=\"Email\"\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        value={this.state.password}\n                        onChange={(e) =>\n                          this.setState({ password: e.target.value })\n                        }\n                        placeholder=\"Password\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-md btn-block W-70\"\n                        onClick={() => this.addAdmin()}\n                        style={{ backgroundColor: \"#00917c\", width: \"27%\" }}\n                      >\n                        Add\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"\">\n                  <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\"></div>\n                  <div class=\"ibox\">\n                    <div class=\"ibox-content\" id=\"history\">\n                      <div class=\"box-heading\">\n                        <h2>Admin User</h2>\n                      </div>\n\n                      <div\n                        // class=\"table-responsive coman-table\"\n                        id=\"owner-detail-btn\"\n                      >\n                        <div className=\"table dataTables-example\">\n                          {this.state.user_list && (\n                            <ToolkitProvider\n                              // bootstrap4\n                              keyField=\"id\"\n                              data={this.state.user_list}\n                              columns={columns}\n                              // defaultSorted={defaultSorted}\n                              noDataIndication=\"Table is Empty\"\n                              tabIndexCell\n                              search\n                            >\n                              {(props) => (\n                                <>\n                                  <div class=\"search\">\n                                    <div\n                                      id=\"DataTables_Table_0_filter\"\n                                      class=\"dataTables_filter\"\n                                    >\n                                      <label style={{ display: \"inline\" }}>\n                                        Search:\n                                      </label>\n                                      {/* <input\n                                        type=\"search\"\n                                        class=\"form-control input-sm\"\n                                        placeholder=\"\"\n                                        aria-controls=\"DataTables_Table_0\"\n                                        style={{\n                                          width: \"15%\",\n                                          display: \"inline-block\",\n                                          height: \"30px\",\n                                        }}\n                                        onChange={this.handleSearchText}\n                                        onKeyDown={this.onKeyDown}\n                                      /> */}\n                                      <SearchBar\n                                        class=\"form-control input-sm\"\n                                        style={{\n                                          width: \"25%\",\n                                          display: \"inline-block\",\n                                          height: \"30px\",\n                                        }}\n                                        {...props.searchProps}\n                                      />\n\n                                    \n                                    </div>\n                                  </div>\n\n                                  <div>\n                                    <PaginationProvider\n                                      pagination={paginationFactory(options)}\n                                    >\n                                      {({\n                                        paginationProps,\n                                        paginationTableProps,\n                                      }) => (\n                                        <>\n                                          {\"Show\"}{\" \"}\n                                          <SizePerPageDropdownStandalone\n                                            {...paginationProps}\n                                          />{\" \"}\n                                          {\"entries\"}{\" \"}\n                                          <BootstrapTable\n                                            options={tableOptions}\n                                            noDataIndication={() => (\n                                              <div\n                                                style={{ textAlign: \"center\" }}\n                                              >\n                                                Table is Empty\n                                              </div>\n                                            )}\n                                            striped\n                                            trStyle={this.rowStyleFormat}\n                                            rowStyle={{\n                                              textAlign: \"center\",\n                                              outline: \"none\",\n                                            }}\n                                            {...props.baseProps}\n                                            {...paginationTableProps}\n                                            sort={{\n                                              sortFunc: this.sorting,\n                                              sortCaret: this.sortCaret,\n                                            }}\n                                          />\n                                          <div className=\"paginationbottom\">\n                                            <PaginationTotalStandalone\n                                              {...paginationProps}\n                                            />\n                                            <PaginationListStandalone\n                                              {...paginationProps}\n                                            />\n                                          </div>\n                                        </>\n                                      )}\n                                    </PaginationProvider>\n                                  </div>\n                                </>\n                              )}\n                            </ToolkitProvider>\n                          )}\n                        </div>\n                      </div>\n                      {/* <div id=\"styleSelector\"></div> */}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : null}\n      </>\n    );\n  }\n}\n","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\BlockList.jsx",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"import React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Link } from \"react-router-dom\";\nimport ToolkitProvider,{Search} from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory, {\n  PaginationProvider,\n  SizePerPageDropdownStandalone,\n  PaginationListStandalone,\n  PaginationTotalStandalone,\n} from \"react-bootstrap-table2-paginator\";\n// import { connect } from \"react-redux\";\n// import 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport Header from \"./Header.jsx\";\nimport SideNavbar from \"./sideNavbar.jsx\";\n\nimport {\n  tableOptions,\n  defaultSorted,\n  getDate,\n  customSort,\n} from \"../utils/tableData\";\n\n// import '../assets/css/bootstrap.min.css';\n// import '../assets/css/style.css';\n// import '../assets/css/media-admin.css';\n// import '../assets/css/mystyle.css';\n// import '../assets/css/admin.css';\n// import '../assets/font-awesome/css/font-awesome.css';\n// import '../assets/font-awesome/css/fontawesome.css';\n// import '../assets/css/datatables.min.css';\n\nexport default class BlockList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      quizList: [],\n      totalCount: 0,\n      pageSize: this.props.match.params.page\n        ? Number(this.props.match.params.page)\n        : 10,\n      showModal: false,\n      quizId: \"\",\n      isQuizLoading: false,\n      reasonText: \"\",\n      fetchingNext: false,\n      totalQuiz: 0,\n      showInfoModal: false,\n      infoMessage: \"\",\n      isFullLoading: false,\n      filterText: \"\",\n      quizListOld: [],\n      masterQuiz: \"\",\n      cell: false,\n      value: \"\",\n      urlData: \"\",\n      miniBar: true,\n      screenwidth: \"\",\n      user_list: \"\",\n      tableload: false,\n      lastPage: 1,\n      user: [\n        {\n          id: \"1\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"2\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"3\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"4\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"5\",\n          name: \"John wick\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n        {\n          id: \"6\",\n          name: \"John wick\",\n          email: \"john123@gmail.com\",\n          count: 2,\n        },\n      ],\n    };\n    // this.props.getUserList({skip:0,limit:100,search:''})\n  }\n\n  minBar = () => {\n    this.setState({ miniBar: !this.state.miniBar });\n  };\n  getAllUser = async () => {\n    axios\n      .get(\"http://3.23.128.15:3000/api/v1/users/getAllBlacklistedUser\")\n      .then((data) => {\n        this.setState({ user_list: data.data.data });\n      })\n      .catch((error) => toast.error(error));\n  };\n  componentDidMount() {\n    this.getAllUser();\n    // window.addEventListener(\"resize\", function (event) {\n    //   const x = document.documentElement.clientWidth;\n    //   this.updateWidth(x);\n    // });\n    // this.setState({ cell: true });\n  }\n\n  //   updateWidth = (x) => {\n  //     this.setState({\n  //       screenwidth: x,\n  //     });\n  //   };\n\n  // searchResult = () => {\n  //   const { filterText, quizList, quizListOld } = this.state;\n  //   const { fetchQuizListDetails } = this.props;\n\n  //   if (quizListOld.length === 0) {\n  //     this.setState({ quizListOld: quizList });\n  //   }\n  //   this.setState({ isLoading: true });\n\n  //   fetchQuizListDetails(0, 100, filterText);\n  // };\n\n  // getCategoryNames = (items) => {\n  //   let categoryNames = \"\";\n\n  //   if (items.length > 1) {\n  //     items.forEach((item, index) => {\n  //       if (item !== \",\") {\n  //         if (index === items.length - 1) {\n  //           categoryNames += `${item} `;\n  //         } else {\n  //           categoryNames += `${item}, `;\n  //         }\n  //       }\n  //     });\n  //     categoryNames = categoryNames.substring(0, categoryNames.length - 1);\n  //     return categoryNames;\n  //   } else {\n  //     return items[0] !== \",\" ? items[0] : \"\";\n  //   }\n  // };\n  componentDidUpdate(prevProps) {\n    // let list\n    // if (prevProps.userList != this.props.userList) {\n    //   console.log(this.props.userList.data.data[0].list)\n    //   list = this.getList(this.props.userList.data.data[0].list)\n    //   console.log('lissst',list)\n    //   this.setState({user_list: list})\n    // }\n  }\n\n  getList = (data) => {\n    const { quizList, fetchingNext } = this.state;\n    let newList = quizList;\n    const list = [];\n    let masterQuiz = \"\";\n\n    if (data) {\n      data.forEach((listItem) => {\n        const detail = {\n          id: listItem._id,\n          firstName: listItem.firstName,\n          email: listItem.email,\n          phone: listItem.phone,\n        };\n        list.push(detail);\n      });\n      return list;\n    }\n  };\n\n  rowStyleFormat = (row, rowIdx) => {\n    return {\n      outline: \"none\",\n    };\n  };\n  userAccess = (email) => {\n    axios\n      .post(\"http://3.23.128.15:3000/api/v1/users/manageUserAccess\", { email })\n      .then((data) => {\n        toast.success('User Access Updated');\n        this.getAllUser()\n      })\n      .catch((error) => toast.error(error));\n  };\n  rankFormater = (cell, row, rowIndex, formatExtraData) => {\n    return (\n      <div class=\"action-btn\" style={{ cursor: \"pointer\" }}>\n        {row.isBlacklisted ? <span onClick={() => this.userAccess(row.email)}>Unblacklist</span> : <span onClick={() => this.userAccess(row.email)}>Blacklist</span>}\n        {/* <!--   <a href=\"#\" data-toggle=\"modal\" data-target=\"#modal-delete\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></a> --> */}\n      </div>\n    );\n  };\n\n  getUserDetail = (id) => {\n    this.props.getUserDetail({ id });\n    this.props.history.push(`/user-detail/${id}`);\n  };\n  handleSearchText = (e) => {\n    // this.props.getUserList({skip:0,limit:30,search: e.target.value})\n  };\n  render() {\n    console.log(this.state.user);\n    const { SearchBar } = Search;\n\n    // if (this.state.cell == false) {\n    //   this.componentDidMount();\n    // }\n    const columns = [\n      //   {\n      //     dataField: \"firstName\",\n      //     text: \"Full Name\",\n      //     sort: true,\n      //     // formatter: this.redirectComponent,\n      //     headerStyle: (colum, colIndex) => {\n      //       return {\n      //         width: \"25%\",\n      //         textAlign: \"center\",\n      //         outline: \"none\",\n      //       };\n      //     },\n      //   },\n      {\n        dataField: \"email\",\n        text: \"Email Address\",\n        sort: true,\n        editCellStyle: {\n          backgroundColor: \"#000\",\n        },\n        headerStyle: (colum, colIndex) => {\n          return {\n            textAlign: \"center\",\n            outline: \"none\",\n          };\n        },\n      },\n      {\n        dataField: \"apiCalls\",\n        text: \"ApiCount\",\n        sort: true,\n        headerStyle: (colum, colIndex) => {\n          return {\n            width: \"25%\",\n            textAlign: \"center\",\n            outline: \"none\",\n          };\n        },\n      },\n      {\n        dataField: \"isBlacklisted\",\n        text: \"Actions\",\n        formatter: this.rankFormater,\n        headerStyle: (colum, colIndex) => {\n          return {\n            width: \"12%\",\n            textAlign: \"center\",\n            outline: \"none\",\n          };\n        },\n      },\n    ];\n\n    const {\n      quizList,\n      pageSize,\n      showModal,\n      isQuizLoading,\n      reasonText,\n      infoMessage,\n      showInfoModal,\n      isFullLoading,\n      masterQuiz,\n    } = this.state;\n\n    const options = {\n      ...tableOptions,\n      // totalSize: this.state.user.length,\n      sizePerPage: 5,\n      custom: true,\n      // onPageChange: this.onPageChange,\n    };\n    return (\n      <>\n         {this.state.user_list ? (\n          <>\n            <SideNavbar\n            //   miniBar={this.state.miniBar}\n            //   screenwidth={this.state.screenwidth}\n            />\n            <div\n              id=\"page-wrapper\"\n              class=\"dark-bg\"\n              style={{ minHeight: \"625px\" }}\n            >\n              {/* <Header addMiniBar={this.minBar} /> */}\n              <div class=\"wrapper wrapper-content\">\n                <div class=\"\">\n                  <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\"></div>\n                  <div class=\"ibox\">\n                    <div class=\"ibox-content\" id=\"history\">\n                      <div class=\"box-heading\">\n                        <h2>Admin</h2>\n                      </div>\n\n                      <div id=\"owner-detail-btn\">\n                        <div className=\"table dataTables-example\">\n                          {this.state.user_list && (\n                            <ToolkitProvider\n                              keyField=\"id\"\n                              data={this.state.user_list}\n                              columns={columns}\n                              noDataIndication=\"Table is Empty\"\n                              tabIndexCell\n                              search\n                            >\n                              {(props) => (\n                                <>\n                                  <div class=\"search\">\n                                    <div\n                                      id=\"DataTables_Table_0_filter\"\n                                      class=\"dataTables_filter\"\n                                    >\n                                      <label style={{ display: \"inline\" }}>\n                                        Search:\n                                      </label>\n                                      {/* <input\n                                        type=\"search\"\n                                        class=\"form-control input-sm\"\n                                        placeholder=\"\"\n                                        aria-controls=\"DataTables_Table_0\"\n                                        style={{\n                                          width: \"15%\",\n                                          display: \"inline-block\",\n                                          height: \"30px\",s\n                                        }}\n                                        onChange={this.handleSearchText}\n                                        onKeyDown={this.onKeyDown}\n                                      /> */}\n                                      <SearchBar\n                                        class=\"form-control input-sm\"\n                                        style={{\n                                          width: \"25%\",\n                                          display: \"inline-block\",\n                                          height: \"30px\",\n                                        }}\n                                        {...props.searchProps}\n                                      />\n\n                                      {/* <span\n                                        class=\"input-group-append search-btn\"\n                                        style={{\n                                          display: \"inline-block\",\n                                        }}\n                                        onClick={() => this.searchResult()}\n                                      >\n                                        <i\n                                          class=\"feather icon-search input-group-text\"\n                                          style={{\n                                            minHeight: \"36px\",\n                                          }}\n                                        ></i>\n                                      </span> */}\n                                    </div>\n                                  </div>\n\n                                  <div>\n                                    <PaginationProvider\n                                      pagination={paginationFactory(options)}\n                                    >\n                                      {({\n                                        paginationProps,\n                                        paginationTableProps,\n                                      }) => (\n                                        <>\n                                          {\"Show\"}{\" \"}\n                                          <SizePerPageDropdownStandalone\n                                            {...paginationProps}\n                                          />{\" \"}\n                                          {\"entries\"}{\" \"}\n                                          <BootstrapTable\n                                            options={tableOptions}\n                                            noDataIndication={() => (\n                                              <div\n                                                style={{ textAlign: \"center\" }}\n                                              >\n                                                Table is Empty\n                                              </div>\n                                            )}\n                                            striped\n                                            trStyle={this.rowStyleFormat}\n                                            rowStyle={{\n                                              textAlign: \"center\",\n                                              outline: \"none\",\n                                            }}\n                                            {...props.baseProps}\n                                            {...paginationTableProps}\n                                            sort={{\n                                              sortFunc: this.sorting,\n                                              sortCaret: this.sortCaret,\n                                            }}\n                                          />\n                                          <div className=\"paginationbottom\">\n                                            <PaginationTotalStandalone\n                                              {...paginationProps}\n                                            />\n                                            <PaginationListStandalone\n                                              {...paginationProps}\n                                            />\n                                          </div>\n                                        </>\n                                      )}\n                                    </PaginationProvider>\n                                  </div>\n                                </>\n                              )}\n                            </ToolkitProvider>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : null}\n      </>\n    );\n  }\n}\n","C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\Loader.jsx",[],"C:\\Users\\baps\\Desktop\\idtree\\src\\Dashboard\\PageLoader.jsx",[],{"ruleId":"170","severity":1,"message":"171","line":11,"column":36,"nodeType":"172","messageId":"173","endLine":11,"endColumn":38},{"ruleId":"170","severity":1,"message":"171","line":11,"column":54,"nodeType":"172","messageId":"173","endLine":11,"endColumn":56},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":11,"column":27,"nodeType":"180","messageId":"181","endLine":11,"endColumn":33},{"ruleId":"170","severity":1,"message":"171","line":18,"column":36,"nodeType":"172","messageId":"173","endLine":18,"endColumn":38},{"ruleId":"170","severity":1,"message":"171","line":18,"column":54,"nodeType":"172","messageId":"173","endLine":18,"endColumn":56},{"ruleId":"178","severity":1,"message":"182","line":4,"column":10,"nodeType":"180","messageId":"181","endLine":4,"endColumn":20},{"ruleId":"178","severity":1,"message":"183","line":4,"column":22,"nodeType":"180","messageId":"181","endLine":4,"endColumn":30},{"ruleId":"178","severity":1,"message":"184","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"186","line":20,"column":6,"nodeType":"187","endLine":20,"endColumn":15,"suggestions":"188"},{"ruleId":"170","severity":1,"message":"189","line":28,"column":36,"nodeType":"172","messageId":"173","endLine":28,"endColumn":38},{"ruleId":"178","severity":1,"message":"190","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":14},{"ruleId":"178","severity":1,"message":"191","line":15,"column":8,"nodeType":"180","messageId":"181","endLine":15,"endColumn":14},{"ruleId":"178","severity":1,"message":"192","line":20,"column":3,"nodeType":"180","messageId":"181","endLine":20,"endColumn":16},{"ruleId":"178","severity":1,"message":"193","line":21,"column":3,"nodeType":"180","messageId":"181","endLine":21,"endColumn":10},{"ruleId":"178","severity":1,"message":"194","line":22,"column":3,"nodeType":"180","messageId":"181","endLine":22,"endColumn":13},{"ruleId":"178","severity":1,"message":"195","line":170,"column":23,"nodeType":"180","messageId":"181","endLine":170,"endColumn":35},{"ruleId":"178","severity":1,"message":"196","line":171,"column":9,"nodeType":"180","messageId":"181","endLine":171,"endColumn":16},{"ruleId":"178","severity":1,"message":"197","line":173,"column":9,"nodeType":"180","messageId":"181","endLine":173,"endColumn":19},{"ruleId":"178","severity":1,"message":"198","line":285,"column":7,"nodeType":"180","messageId":"181","endLine":285,"endColumn":15},{"ruleId":"178","severity":1,"message":"199","line":286,"column":7,"nodeType":"180","messageId":"181","endLine":286,"endColumn":15},{"ruleId":"178","severity":1,"message":"200","line":287,"column":7,"nodeType":"180","messageId":"181","endLine":287,"endColumn":16},{"ruleId":"178","severity":1,"message":"201","line":288,"column":7,"nodeType":"180","messageId":"181","endLine":288,"endColumn":20},{"ruleId":"178","severity":1,"message":"202","line":289,"column":7,"nodeType":"180","messageId":"181","endLine":289,"endColumn":17},{"ruleId":"178","severity":1,"message":"203","line":290,"column":7,"nodeType":"180","messageId":"181","endLine":290,"endColumn":18},{"ruleId":"178","severity":1,"message":"204","line":291,"column":7,"nodeType":"180","messageId":"181","endLine":291,"endColumn":20},{"ruleId":"178","severity":1,"message":"205","line":292,"column":7,"nodeType":"180","messageId":"181","endLine":292,"endColumn":20},{"ruleId":"178","severity":1,"message":"197","line":293,"column":7,"nodeType":"180","messageId":"181","endLine":293,"endColumn":17},{"ruleId":"178","severity":1,"message":"206","line":38,"column":13,"nodeType":"180","messageId":"181","endLine":38,"endColumn":19},{"ruleId":"178","severity":1,"message":"207","line":45,"column":11,"nodeType":"180","messageId":"181","endLine":45,"endColumn":18},{"ruleId":"208","severity":1,"message":"209","line":197,"column":17,"nodeType":"210","endLine":197,"endColumn":72},{"ruleId":"178","severity":1,"message":"190","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":14},{"ruleId":"178","severity":1,"message":"211","line":28,"column":11,"nodeType":"180","messageId":"181","endLine":28,"endColumn":33},{"ruleId":"178","severity":1,"message":"212","line":29,"column":11,"nodeType":"180","messageId":"181","endLine":29,"endColumn":22},{"ruleId":"213","severity":1,"message":"214","line":56,"column":21,"nodeType":"210","endLine":56,"endColumn":24},{"ruleId":"215","severity":1,"message":"216","line":58,"column":23,"nodeType":"210","endLine":62,"endColumn":25},{"ruleId":"213","severity":1,"message":"214","line":83,"column":23,"nodeType":"210","endLine":83,"endColumn":55},{"ruleId":"178","severity":1,"message":"184","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"217","line":24,"column":11,"nodeType":"180","messageId":"181","endLine":24,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":25,"column":9,"nodeType":"220","messageId":"221","endLine":25,"endColumn":71},{"ruleId":"208","severity":1,"message":"209","line":53,"column":17,"nodeType":"210","endLine":53,"endColumn":72},{"ruleId":"178","severity":1,"message":"191","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":14},{"ruleId":"178","severity":1,"message":"191","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":14},{"ruleId":"178","severity":1,"message":"190","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":14},{"ruleId":"178","severity":1,"message":"191","line":15,"column":8,"nodeType":"180","messageId":"181","endLine":15,"endColumn":14},{"ruleId":"178","severity":1,"message":"192","line":20,"column":3,"nodeType":"180","messageId":"181","endLine":20,"endColumn":16},{"ruleId":"178","severity":1,"message":"193","line":21,"column":3,"nodeType":"180","messageId":"181","endLine":21,"endColumn":10},{"ruleId":"178","severity":1,"message":"194","line":22,"column":3,"nodeType":"180","messageId":"181","endLine":22,"endColumn":13},{"ruleId":"178","severity":1,"message":"195","line":184,"column":23,"nodeType":"180","messageId":"181","endLine":184,"endColumn":35},{"ruleId":"178","severity":1,"message":"196","line":185,"column":9,"nodeType":"180","messageId":"181","endLine":185,"endColumn":16},{"ruleId":"178","severity":1,"message":"197","line":187,"column":9,"nodeType":"180","messageId":"181","endLine":187,"endColumn":19},{"ruleId":"178","severity":1,"message":"198","line":299,"column":7,"nodeType":"180","messageId":"181","endLine":299,"endColumn":15},{"ruleId":"178","severity":1,"message":"199","line":300,"column":7,"nodeType":"180","messageId":"181","endLine":300,"endColumn":15},{"ruleId":"178","severity":1,"message":"200","line":301,"column":7,"nodeType":"180","messageId":"181","endLine":301,"endColumn":16},{"ruleId":"178","severity":1,"message":"201","line":302,"column":7,"nodeType":"180","messageId":"181","endLine":302,"endColumn":20},{"ruleId":"178","severity":1,"message":"202","line":303,"column":7,"nodeType":"180","messageId":"181","endLine":303,"endColumn":17},{"ruleId":"178","severity":1,"message":"203","line":304,"column":7,"nodeType":"180","messageId":"181","endLine":304,"endColumn":18},{"ruleId":"178","severity":1,"message":"204","line":305,"column":7,"nodeType":"180","messageId":"181","endLine":305,"endColumn":20},{"ruleId":"178","severity":1,"message":"205","line":306,"column":7,"nodeType":"180","messageId":"181","endLine":306,"endColumn":20},{"ruleId":"178","severity":1,"message":"197","line":307,"column":7,"nodeType":"180","messageId":"181","endLine":307,"endColumn":17},{"ruleId":"178","severity":1,"message":"190","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":14},{"ruleId":"178","severity":1,"message":"191","line":15,"column":8,"nodeType":"180","messageId":"181","endLine":15,"endColumn":14},{"ruleId":"178","severity":1,"message":"192","line":20,"column":3,"nodeType":"180","messageId":"181","endLine":20,"endColumn":16},{"ruleId":"178","severity":1,"message":"193","line":21,"column":3,"nodeType":"180","messageId":"181","endLine":21,"endColumn":10},{"ruleId":"178","severity":1,"message":"194","line":22,"column":3,"nodeType":"180","messageId":"181","endLine":22,"endColumn":13},{"ruleId":"178","severity":1,"message":"195","line":170,"column":23,"nodeType":"180","messageId":"181","endLine":170,"endColumn":35},{"ruleId":"178","severity":1,"message":"196","line":171,"column":9,"nodeType":"180","messageId":"181","endLine":171,"endColumn":16},{"ruleId":"178","severity":1,"message":"197","line":173,"column":9,"nodeType":"180","messageId":"181","endLine":173,"endColumn":19},{"ruleId":"178","severity":1,"message":"198","line":281,"column":7,"nodeType":"180","messageId":"181","endLine":281,"endColumn":15},{"ruleId":"178","severity":1,"message":"199","line":282,"column":7,"nodeType":"180","messageId":"181","endLine":282,"endColumn":15},{"ruleId":"178","severity":1,"message":"200","line":283,"column":7,"nodeType":"180","messageId":"181","endLine":283,"endColumn":16},{"ruleId":"178","severity":1,"message":"201","line":284,"column":7,"nodeType":"180","messageId":"181","endLine":284,"endColumn":20},{"ruleId":"178","severity":1,"message":"202","line":285,"column":7,"nodeType":"180","messageId":"181","endLine":285,"endColumn":17},{"ruleId":"178","severity":1,"message":"203","line":286,"column":7,"nodeType":"180","messageId":"181","endLine":286,"endColumn":18},{"ruleId":"178","severity":1,"message":"204","line":287,"column":7,"nodeType":"180","messageId":"181","endLine":287,"endColumn":20},{"ruleId":"178","severity":1,"message":"205","line":288,"column":7,"nodeType":"180","messageId":"181","endLine":288,"endColumn":20},{"ruleId":"178","severity":1,"message":"197","line":289,"column":7,"nodeType":"180","messageId":"181","endLine":289,"endColumn":17},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'Redirect' is defined but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["224"],"Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'Header' is defined but never used.","'defaultSorted' is defined but never used.","'getDate' is defined but never used.","'customSort' is defined but never used.","'fetchingNext' is assigned a value but never used.","'newList' is assigned a value but never used.","'masterQuiz' is assigned a value but never used.","'quizList' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'showModal' is assigned a value but never used.","'isQuizLoading' is assigned a value but never used.","'reasonText' is assigned a value but never used.","'infoMessage' is assigned a value but never used.","'showInfoModal' is assigned a value but never used.","'isFullLoading' is assigned a value but never used.","'active' is assigned a value but never used.","'colapse' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'profileDataFromProfile' is assigned a value but never used.","'profileData' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'submit' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},"Update the dependencies array to be: [isLogin, props.history]",{"range":"227","text":"228"},[639,648],"[isLogin, props.history]"]